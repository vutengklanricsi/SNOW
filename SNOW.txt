----ServiceNow----



Service now egy task manager platform személyreszabható, konfigurálható fejleszthető cégek számára. 
Felhő alapú task manager platform aminek keretrendszere van és eszközök amikkel applikációt tudunk létrehozni.

Serivce Now legnagyobb előnye, hogy nem kell előről elkezdeni, ha már hasonló applikációt fejlesztettek már korábban akkor a korábbi ticketeket felhasználható.
pre-built applikációi vannak amik segítik a folyamatot(készítését).

Service now az egy felhő alapú task manager platform amely egy rekordnak az egy rendszere
amely egy felületen keresztül tudunk elérni ezeket a komplex szervezeteket.

The company specializes in IT services management (ITSM), IT operations management (ITOM) and IT business management (ITBM),
 allowing users to manage projects, teams and customer interactions via a variety of apps and plugins.
 
Tegyük fel, hogy a serive nown van egy appunk ami tárolja az információnkat, pl.: id, születési év stb..
Ezeket az adatokat mi felhasználhatjuk egy másik applikáció készítésében.

 Cloud - Nem kell lokálisan telepíteni vagy tárolni a gépen.
Könnyen elérhető , mint egy weboldal. 

Applikáció - Applikációként is fejleszthető. Saját applikációt fejleszthetsz belőle az a vállalkozás igényeinek megfelelően.
  
Ticket - egy request ami be van jegyezve a munkafolyamat rendszerben részletezi az elvégzendő problémát, feladatot.

Single source of record. mindenkinek elérhető a a rekord.

Incidens - amikor azonnal kezelni kell a problémát.

Request - Az egy kérés amit minél hamarabb és minél hatékonyan kell elvégezni vagy teljesíteni.

Újrafelhasználható folyamat. Ha már egy hasonló request-et teljesítettünk akkor tudnunk kell, hogy mennyi időbe telik újra teljesíteni a taskot.

Miért tároljuk ezt az adatot(folyamatot) egy adatbázisban az applikációban?

Applikáción keresztül. Gyorsabb kiszolgálás, Automitzáció, triage, általánosítani folyamatokat, standardization processs.
workflow, mobile/ catalog. 


 




---Client Side Scripting---


---Client Script----


- Client Script Formokat és form mezőket kezelünk real time-ban(élőben)
- A böngészőben hajtódik végre(fut le)



- Mikor használjuk?

- jelenítse meg az alertet amikor a form töltődik
- jelenjen meg az üzenet, ha a mező értéke változott
- változtassa meg a mező értékét, amikor egy másik mező változott a form-ban (checkbox két opcióval)
- jelenjen meg/rejtse el a kiválsztható mezőket
- jelenjen meg/rejtse el a szekciókat


- onLoad

- A script lefut amikor a form betöltődik és azelőtt, hogy a felhasználó iránytína
- Akkor használatos amikor valamit meg kell változtatni a form-on miközben töltődik

- onChange

- Script will run when value of any field is upadated or changed
- Used to perform some operation as per the field changed
- paraméterei: control, oldValue, newValue, isLoading, isTemplate

- onSubmit

- script will run when form is submitted or saved
- used to perform validations before form is saved

- onCellEdit

- script will run when a field value changes on a list
- paraméterei: sysIds, table, oldValues, newValue, callback

sysId - edited item(whatever item edited it will automatically hold that value)
table - table name of the eited item
callback - continue the execution of other related cell edit scripts


- client side scripting - scripts execute when a users browser and are used to manage forms and forms fields
	exapmles:
	- show an alert form loads
	- validate form data
	- show/hide choices of fields
	- hide/show sections
	- set a value on the form
	- confirmation on submit
	

GlideUser: 
	- információt jelenít meg a bejelentkezett felhasználóról
	- object amivel hozzáférünk a methodshoz g_user
	- kliens oldalon használjuk
	- syntax -g_user.<GlideUserMethod()>
	
	
GlideAjax:
	- kliens oldalról hívunk meg szerver oldali kódot
	- kliens oldali scripting
	- syntax - var ga = new GlideAjax(<Script Include>)
	- GlideAjax példákat GlideAjax Construcorokkal hívjuk meg


GlideForm:
	- arra használják, hogy testre szabhatjuk a form-ot és tevékenységeket végezzen formon
	- g_form - al tudunk a methodushoz hozzáférni
	- kliens oldali
	- syntaxisa - -g_form.<GlideFormMethod>(<Parameter>)


GuideDialogWindow:
	- Megjeleníti a dialogust a jelenlegi window-ban és frame-ben
	- kliens oldali


	
---Server Side Scripting---
  
  

- Server-side scripts execute on server and database.
	examples:
	- Update a field when a record is inserted
	- Setting a value on a field when parent record is updated
	- Validate the role of logged in user
	- Generate events
	- Send email
	
	
- GlideRecord

- Glidrecord adatbázis kezelési műveleteket tudunk vele végezni
- szerver oldalon használjuk
- Syntaxisa GlideRecord-ot class példa készítése
  var gr = new GlideRecord(<TableName>):

- GlideSystem

- GlideSystem arra használjuk, hogy információt kérdezzünk le a rendszerről és a jelenlegi bejelentkezett felhasználóról.
- változó a gs
- Syntaxisa - gs.<GlideSystemMethod>()

- GlideAggregate

- GlideAggregate aggregációs műveletet hajtson végre az adatbázisban.
- bővítmény a GlideRecord class-ban
- adatbázis aggregációs lekérdezéseket(műveleteket) biztosít(SUM, COUNT, MIN, MAX, AVG) 
- Syntaxisa - var agg = new GlideAggregate("incident")



---Api Used in Client Script---



- Glide Form:
	- egy metüódus amivel testreszabhatjuk a form-okat.
	- g_form syntax


- addDecoration: incidens form - megmutajta a felhasználónak az ikont(action icont) amikor a kontakt mező ki van töltve.

- addErrorMessage: megjeleníti hiba üzenetet vagy alertet a form felett. Alert üzenetet rak ki,ha user priorityt p1-re rakja.

- addInforMessage: üzenetet jelenítünk meg tájékoztatás jelleggel.

- addOption: Option choice-t ad, választási lehetőséget ad a felhasználónak.









---GlideAjax---

- Szerver oldali kód ami kliens oldalról fut le. Kliens oldalon kell defininálni a GlideAjaxet.



példa:
	- fieldname: configuration item
	- Type: onChange


script inlcude - catch value from the server.

Client callable teszi lehetővé, hogy Glideajax így tud kommunikálni a script include-dal.

